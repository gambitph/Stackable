/**
 * #.# Common SCSS
 *
 * Can include things like variables and mixins
 * that are used across the project.
*/

// Most used breakpoints
$break-huge: 1440px;
$break-wide: 1280px;
$break-large: 960px; // admin sidebar auto folds. Breakpoint for tablet
$break-medium: 782px; // adminbar goes big
$break-small: 600px; // Breakpoint for mobile
$break-mobile: 480px;
$break-js-tablet: 1025px;
$break-js-mobile: 768px;

[class*="ugb-"] form[class*="-link"],
form[class*="ugb-"][class*="-link"],
[class*="ugb-"] + form[class*="-link"] {
	display: flex;
	justify-content: center;
	align-items: center;
}

// Text margin bottom
$text-margin-bottom: 16px;

// Box
$box-radius: 12px;
$box-hori-padding: 35px;
$box-vert-padding: 60px;

/**
 * For blocks with a box outline, we can use the custom properties:
 * --box-padding-vert
 * --box-padding-hori
 * to get the current padding values
 */
@mixin boxNoPadding() {
	box-shadow: 0 5px 5px 0 rgba(18, 63, 82, 0.035), 0 0 0 1px rgba(176, 181, 193, 0.2);
	background-color: #fff;
	border-radius: $box-radius;
	overflow: hidden;
}
@mixin box() {
	@include boxNoPadding();
	padding: $box-vert-padding $box-hori-padding;
	--box-padding-vert: #{$box-vert-padding};
	--box-padding-hori: #{$box-hori-padding};
	@media screen and (max-width: $break-medium) {
		padding: ($box-vert-padding * 2/3) ($box-hori-padding * 2/3);
		--box-padding-vert: #{($box-vert-padding * 2/3)};
		--box-padding-hori: #{($box-hori-padding * 2/3)};
	}
	@media screen and (max-width: $break-small) {
		padding: $box-hori-padding ($box-hori-padding / 2);
		--box-padding-vert: #{$box-hori-padding};
		--box-padding-hori: #{($box-hori-padding / 2)};
	}
}

@mixin baseButton() {
	padding-bottom: calc(0.375em - var(--s-border, 0px));
	padding-left: 1.25em;
	padding-right: 1.25em;
	padding-top: calc(0.375em - var(--s-border, 0px));
	font-size: 1em;
	line-height: 1.5 !important;
	align-items: center;
}

// New standardized block styles.
.ugb-main-block {
	margin-top: 35px;
	margin-bottom: 35px;
	padding: 0;
	display: flex;
	justify-content: center;
	align-items: center;
	&.alignfull {
		padding: 0 35px;
		@media screen and (max-width: $break-small) {
			padding-right: 17.5px;
			padding-left: 17.5px;
		}
	}
}
.ugb-inner-block,
.ugb-block-content {
	margin: 0;
	padding: 0;
	width: 100%;
	position: relative;
}

// Full-height blocks
.ugb--full-height {
	min-height: 700px;
}
@media screen and (min-width: 1025px) {
	.ugb--full-height {
		min-height: 100vh;
	}
}

// A block can have a ugb-content-width class to make it's content fit the content-width.
// This should only be used for full-widths.
.ugb--restrict-content-width .ugb-content-wrapper {
	max-width: var(--content-width);
	margin: 0 auto;
}

// Background overlay. Any block / item that has a background/gradient/overlay should have this class.
.ugb--has-background-overlay {
	position: relative;
	z-index: 1;
	background-size: cover;
	background-position: center;
	&.ugb--has-background-overlay::before {
		content: "";
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		z-index: 2;
	}
	> * {
		position: relative;
		z-index: 3;
	}
}

// Different box shadows for the shadow setting.
$shadows: ( none )
	( 0 0 0 1px rgba(120, 120, 120, 0.1) )
	( 0 0 0 2px rgba(120, 120, 120, 0.1) )
	( 0 5px 5px 0 rgba(18, 63, 82, 0.035), 0 0 0 1px rgba(176, 181, 193, 0.2) )
	( 0px 2px 20px rgba(153, 153, 153, 0.2) )
	( 0 5px 30px -10px rgba(18, 63, 82, 0.3) )
	( 0px 10px 30px rgba(0, 0, 0, 0.05) )
	( 7px 5px 30px rgba(72, 73, 121, 0.15) )
	( 0px 10px 60px rgba(0, 0, 0, 0.1) )
	( 0px 70px 130px -60px rgba(72, 73, 121, 0.38) );

@for $i from 0 through 9 {
	.ugb--shadow-#{ $i },
	.ugb-shadow-#{ $i } { // Old naming convention.
		box-shadow: nth($shadows, $i + 1) !important;
	}
}

// Make sure all our blocks are at the same level. Mainly for our separator to work.
div[class^="wp-block-"] {
	z-index: 1;
}

// Fix for iOS fixed background attachments do not convert to scroll.
@supports (-webkit-overflow-scrolling: touch) {
	[class*="ugb-"][style*="background-attachment:fixed"] {
		background-attachment: scroll !important;
	}
	[class*="ugb-"][style*="background-attachment: fixed"] {
		background-attachment: scroll !important;
	}
}
