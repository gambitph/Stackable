// Only show resizable bottom margin when hovering over the block.
[data-block]:not(:hover) .stk-block + .stk-resizable-bottom-margin:not(.stk--is-resizing) { // The resizer is immediately outside the block div.
	opacity: 0;
}

// The resizer itself.
.stk-resizable-bottom-margin {
	background: rgba(220, 158, 93, 0.3); // This color should be visible even if the background is black.
	opacity: 1;
	position: absolute !important;
	bottom: 0;
	left: 0;
	right: 0;
	z-index: 9; // If the margin becomes 0, this makes the handler still selectable.

	// Make more visible when resizing or when hovered.
	&.stk--is-resizing,
	&:hover {
		background: rgba(220, 158, 93, 0.45);
	}

	.components-resizable-box__handle {
		height: 100%; // The handle should be the entire margin
		bottom: 0 !important; // Anchor on the bottom
		min-height: 5px; // If the margin becomes 0, this makes the handler still selectable.
		&::before,
		&::after {
			display: none !important;
		}
	}

	// Make the handler highlight when hovered if the margin is too small.
	&.stk--is-tiny:hover .components-resizable-box__handle {
		background: rgba(220, 158, 93, 0.45);
	}
}

.stk-resizable-bottom-margin__label {
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translateY(-50%) translateX(-50%);
	display: flex;
	align-items: center;
	justify-content: center;
	font-size: 12px;
	color: #000;
	overflow: hidden;
	height: 100%; // This will clip the label when the margin is too small.

	// Save for next time on when we decide to allow people to click and type in margins.
	// cursor: pointer;
	// z-index: 3;
	// &::after {
	// 	content: "\f347";
	// 	font-family: Dashicons;
	// 	top: 2px;
	// 	position: relative;
	// 	margin-left: 4px;
	// 	font-size: 11px;
	// }
}
