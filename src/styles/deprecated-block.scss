@import "breakpoints";

// Button alignment.
.stk-block .stk-button-group {
	&:not(.stk-collapse-on-desktop) {
		justify-content: var(--stk-alignment-justify-content);
	}
	&:is(.stk--collapse-on-desktop) {
		.stk-block:is(.stk-block-button, .stk-block-icon-button) {
			margin-inline-start: var(--stk-alignment-margin-left);
			margin-inline-end: var(--stk-alignment-margin-right);
		}
	}
}

@include tablet {
	.stk-button-group:is(.stk--collapse-on-tablet) {
		.stk-block:is(.stk-block-button, .stk-block-icon-button) {
			margin-inline-start: var(--stk-alignment-margin-left);
			margin-inline-end: var(--stk-alignment-margin-right);
		}
	}
}

@include mobile {
	.stk-button-group:is(.stk--collapse-on-tablet),
	.stk-button-group:is(.stk--collapse-on-mobile) {
		.stk-block:is(.stk-block-button, .stk-block-icon-button) {
			margin-inline-start: var(--stk-alignment-margin-left);
			margin-inline-end: var(--stk-alignment-margin-right);
		}
	}
}

// Block spacing when horizontally oriented. This has been replaced by .stk--block-horizontal-flex.
// We still need to keep this just in case someone is using the old block in the frontend.
.stk--block-orientation-horizontal > * + * {
	margin-left: cssvar(block-margin-bottom);
}

.stk--block-orientation-horizontal .stk-block {
	width: auto;
}
.stk-inner-blocks {
	&:not(.stk-row) {
		// Inner block orientation.
		&.stk--block-orientation-horizontal {
			flex-direction: row;
			> * {
				margin-top: 0;
				margin-bottom: 0;
			}
		}
	}
}
