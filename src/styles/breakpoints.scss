// These breakpoints are also overridden by gulpfile.js when building styles for
// the editor. We need to define these as integers here because in our
// definition in gulpfile.js, we cannot use px.
$desktop-width: 1024 !default;
$tablet-width: 768 !default;

@mixin desktop {
	@media only screen and (min-width: #{$desktop-width + 0px}) {
		@content;
	}
}
@mixin desktop-tablet {
	@media only screen and (min-width: #{$tablet-width + 0px}) {
		@content;
	}
}
@mixin tablet {
	@media only screen and (min-width: #{$tablet-width + 0px}) and (max-width: #{$desktop-width - 1px}) {
		@content;
	}
}
@mixin tablet-mobile {
	@media only screen and (max-width: #{$desktop-width - 1px}) {
		@content;
	}
}
@mixin mobile {
	@media only screen and (max-width: #{$tablet-width - 1px}) {
		@content;
	}
}

/**
 * The media query combiner we're using arranges the media queries in the wrong
 * order. These dummy media queries below will force mqpacker to sort our media
 * queries correctly from desktop to mobile (so that tablet and mobile media
 * queries would override styles in the correct order).
 *
 * @see https://www.npmjs.com/package/mqpacker#the-first-win-algorithm
 *
 * These dummy styles are removed by gulpfile.js in the `style-editor` and
 * `style` tasks.
 */
@include desktop {
	.z {
		opacity: 1;
	}
}
@include desktop-tablet {
	.z {
		opacity: 1;
	}
}
@include tablet {
	.z {
		opacity: 1;
	}
}
@include tablet-mobile {
	.z {
		opacity: 1;
	}
}
@include mobile {
	.z {
		opacity: 1;
	}
}
