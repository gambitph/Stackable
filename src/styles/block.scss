/**
 * Core Block Styles
 */
@use "sass:math";

@import "breakpoints";
@import "block-transitions";
@import "block-compat";

// We need to set this to relative for making the whole block clickable.
.stk-block {
	position: relative;
	box-sizing: border-box;
}
.stk--block-orientation-horizontal .stk-block {
	width: auto;
}
// .site-content - support for OceanWP
.stk-block,
:is(.entry-content, .site-content) .stk-block {
	margin-top: 0;
}

// IMPORTANT: This fixes wide and full block widths and tame them in the frontend.
:is(.entry-content, .site-content) .stk-block > .stk-content-align {
	margin-left: auto;
	margin-right: auto;
	width: auto;
	margin-block: 0; // Some themes add margin top/bottom when alignfull or alignwide is used.
}

// Containers
.stk-column,
.stk-block.stk-column {
	margin-top: 0;
	margin-bottom: 0;
	// We need to add at least 1px here so that when the column collapses
	// automatically, it still shows up in tablet and moblie.
	min-width: 1px;
}

/**
 * Block widths for when blocks are placed inside columns, and Content Width is set to center or wide.
 */
:root {
	--stk-block-width-default-detected: 900px;
	--stk-block-width-wide-detected: 80vw;
}

@include desktop-tablet {
	.stk-block:is(.aligncenter, .alignwide, .alignfull) > .stk-content-align:not(.alignwide):not(.alignfull),
	.stk-block .stk-block.aligncenter {
		// --stk-block-default-width is a Stackable setting
		// --responsive--aligndefault-width is a Twenty Twenty One setting (possibly for all WP themes)
		// --stk-block-width-default-detected is from the fallback autodetected value.
		max-width: var(--stk-block-default-width, var(--responsive--aligndefault-width, var(--stk-block-width-default-detected, 900px)));
		width: 100%;
		margin-left: auto;
		margin-right: auto;
	}
}
@include desktop-tablet {
	.stk-block:is(.aligncenter, .alignwide, .alignfull) > .stk-content-align.alignwide,
	.stk-block .stk-block.alignwide {
		// --stk-block-default-width is a Stackable setting
		// --responsive--aligndefault-width is a Twenty Twenty One setting (possibly for all WP themes)
		// --stk-block-width-default-detected is from the fallback autodetected value.
		max-width: var(--stk-block-wide-width, var(--responsive--alignwide-width, var(--stk-block-width-wide-detected, 80vw)));
		width: 100%;
		margin-left: auto;
		margin-right: auto;
	}
}
@include mobile {
	.stk-block:is(.aligncenter, .alignwide, .alignfull) > .stk-content-align:not(.alignwide):not(.alignfull),
	.stk-block:is(.aligncenter, .alignwide, .alignfull) > .stk-content-align.alignwide,
	.stk-block .stk-block:is(.aligncenter, .alignwide) {
		width: 100%;
	}
}
.stk-block .stk-block.alignfull {
	width: 100%;
}

/**
 * Resizeable rows and columns
 */
.stk-row {
	display: flex;
	flex-direction: row;
	flex-wrap: wrap;
}
.stk-column {
	flex: 1 1 0; // flex-basis 0 means that all columns will be equal.
	box-sizing: border-box;

	// Don't center the columns.
	margin-left: 0;
	margin-right: 0;

	// Make sure the contents occupy the entire area.
	display: flex;
	align-items: stretch;
}

// Column widths.
@include desktop-tablet {
	@for $i from 2 through 10 {
		.stk-row.stk-columns-#{ $i } {
			> .stk-column {
				flex: 1 1 #{ math.div(100%, $i) };
				max-width: #{ math.div(100%, $i) };
			}
		}
	}
}

// Columns can be collapsed for tablet and mobile only.
@include desktop {
	.stk-row {
		flex-wrap: nowrap;
	}
}
// Mobile auto-collapses all columns.
@include mobile {
	.stk-column {
		flex: 1 1 100%;
		max-width: 100%;
	}
}

// Block inner blocks.
.stk-block-content {
	width: 100%;
	position: relative;
	&:not(.stk-row) {
		// Make sure the inner blocks are top aligned.
		display: flex;
		flex-direction: column;
		justify-content: flex-start;
	}
}
.stk-inner-blocks {
	flex: 1;
	&:not(.stk-row) {
		// Make sure the inner blocks are top aligned.
		display: flex;
		flex-direction: column;
		justify-content: flex-start;

		// Inner block orientation.
		&:not(.stk--block-orientation-horizontal) {
			flex-direction: column;
		}
		&.stk--block-orientation-horizontal {
			flex-direction: row;
			> * {
				margin-top: 0;
				margin-bottom: 0;
			}
		}
	}

	// Ensure the contents don't have extra margins.
	> *:first-child {
		margin-top: 0;
	}
	> *:last-child {
		margin-bottom: 0;
	}
}
// Column with a block background has a padding that might not be obvious.
.stk-block-background {
	&.stk-column > .stk-block-content {
		margin: 0;
	}
}

// Images
.stk-image--fit {
	object-fit: cover;
	height: 100% !important;
	width: 100% !important;
}

// Block float alignment.
:is(.stk-block.alignleft, .stk-block.alignright) {
	.stk-inner-blocks:first-of-type > .stk-block {
		max-width: 350px; // Give a default width for a floated block.
		width: auto;
	}
}

// Responsive hiding.
@include desktop {
	.stk--hide-desktop.stk-block, // Other attributes like the content vertical align can interfere with responsive hiding.
	.stk--hide-desktop {
		display: none !important;
	}
}
@include tablet {
	.stk--hide-tablet.stk-block, // Other attributes like the content vertical align can interfere with responsive hiding.
	.stk--hide-tablet {
		display: none !important;
	}
}
@include mobile {
	.stk--hide-mobile.stk-block, // Other attributes like the content vertical align can interfere with responsive hiding.
	.stk--hide-mobile {
		display: none !important;
	}
}

// Headings, Subtitle, and Text.
// This removes the normal margins of headings and paragraphs, so we can add our own.
.stk-block {
	.stk-block-heading__text,
	.stk-block-text__text,
	.stk-block-subtitle__text {
		margin-bottom: 0;
	}
}
.stk-block-heading,
.stk-block-text,
.stk-block-subtitle,
.stk-block .stk-block-subtitle__text,
.stk-block .stk-block-text__text {
	margin-top: 0;
}
.stk-block-heading,
.stk-block-text,
.stk-block-subtitle {
	word-break: break-word;
	// hyphens: auto;
}
// Headings have a large margin top except when they're the first entry.
:where(.stk-block-heading:not(:first-child)) .stk-block-heading__text {
	margin-top: 1.5em;
}
// No margin top when the first child but only in the frontend.
.stk-block-heading:first-child .stk-block-heading__text:not([contenteditable]) {
	margin-top: 0;
}
// Remove any decorative things added by themes.
.stk-block-text__text,
.stk-block-subtitle__text,
.stk-block-heading__text {
	&::after,
	&::before {
		content: unset;
	}
}

// Typography Classes.
:is(.stk--is-gradient, .stk--is-gradient li, .stk--is-gradient span, .stk--is-gradient a) {
	background-clip: text;
	-webkit-background-clip: text;
	-moz-background-clip: text;
	-o-background-clip: text;
	-webkit-text-fill-color: transparent;
	-moz-text-fill-color: transparent;
	-o-text-fill-color: transparent;
}

// Button alignment.
.stk-block .stk-button-group {
	&:not(.stk-collapse-on-desktop) {
		justify-content: var(--stk-alignment-justify-content);
	}
	&:is(.stk--collapse-on-desktop) {
		.stk-block:is(.stk-block-button, .stk-block-icon-button) {
			margin-inline-start: var(--stk-alignment-margin-left);
			margin-inline-end: var(--stk-alignment-margin-right);
		}
	}
}

@include tablet {
	.stk-button-group:is(.stk--collapse-on-tablet) {
		.stk-block:is(.stk-block-button, .stk-block-icon-button) {
			margin-inline-start: var(--stk-alignment-margin-left);
			margin-inline-end: var(--stk-alignment-margin-right);
		}
	}
}

@include mobile {
	.stk-button-group:is(.stk--collapse-on-tablet),
	.stk-button-group:is(.stk--collapse-on-mobile) {
		.stk-block:is(.stk-block-button, .stk-block-icon-button) {
			margin-inline-start: var(--stk-alignment-margin-left);
			margin-inline-end: var(--stk-alignment-margin-right);
		}
	}
}

.stk-block .stk-button-group {
	flex-direction: row;
	align-items: center; // Vertically align the buttons.
}
.stk-button-group .stk-block { // Prevent buttons from being always in the middle.
	margin-inline: revert;
}

// Buttons.
:is(.stk-block-button, .stk-block-icon-button, .stk-block-pagination, .stk-block-load-more, .stk-block-posts) {
	&:not(.is-style-link) {
		.stk-button {
			text-decoration: none !important; // Some themes may add underlines on buttons, we need to force remove it. !important is the only way.
			justify-content: center;
			display: flex;
			align-items: center;
			text-decoration: none;
			position: relative;

			.stk--svg-wrapper:not(:only-child) {
				&:first-child .stk--inner-svg svg:last-child {
					margin-inline-end: 8px;
				}
				&:last-child .stk--inner-svg svg:last-child {
					margin-inline-start: 8px;
				}
			}
			column-gap: 8px;

			&::before,
			&::after {
				content: "";
				position: absolute;
				inset: 0;
				height: 100%;
				width: 100%;
				pointer-events: none;
				border-radius: inherit;
			}

			&::before {
				// Borders should be on top of the ::after pseudoelement.
				z-index: 2;
			}

			&::after {
				opacity: 0;
				z-index: 1;
			}

			> * {
				z-index: 2;
			}
		}
	}

	&.is-style-pill {
		.stk-button {
			width: 4em;
			border-radius: 100px; // A large number to ensure it's a pill shape.
		}
	}
}

// Text alignment should also work for flex blocks like the icon block.
@mixin align-center-styles {
	--stk-alignment-padding-left: 0;
	--stk-alignment-justify-content: center;
	--stk-alignment-text-align: center;
	--stk-alignment-margin-left: auto;
	--stk-alignment-margin-right: auto;
	text-align: var(--stk-alignment-text-align, start);
}

@mixin align-right-styles {
	--stk-alignment-justify-content: flex-end;
	--stk-alignment-text-align: end;
	--stk-alignment-margin-left: auto;
	--stk-alignment-margin-right: 0;
	text-align: var(--stk-alignment-text-align, start);
}

@mixin align-left-styles {
	--stk-alignment-justify-content: flex-start;
	--stk-alignment-text-align: start;
	--stk-alignment-margin-left: 0;
	--stk-alignment-margin-right: auto;
	text-align: var(--stk-alignment-text-align, start);
}

// Default text direction, we need to add this for RTL support.
.stk-block {
	text-align: start;
	justify-content: var(--stk-alignment-justify-content);
}

// Ensure that our alignments are applied to text.
.stk-block {
	&[class*="has-text-align-"],
	[class*="has-text-align-"] {
		text-align: var(--stk-alignment-text-align, start);
	}
}

.has-text-align {
	&-center {
		@include align-center-styles;
	}
	&-left {
		@include align-left-styles;
	}
	&-right {
		@include align-right-styles;
	}
}

@include tablet-mobile {
	.has-text-align-center-tablet {
		@include align-center-styles;
	}
	.has-text-align-left-tablet {
		@include align-left-styles;
	}
	.has-text-align-right-tablet {
		@include align-right-styles;
	}
}

@include mobile {
	.has-text-align-center-mobile {
		@include align-center-styles;
	}
	.has-text-align-left-mobile {
		@include align-left-styles;
	}
	.has-text-align-right-mobile {
		@include align-right-styles;
	}
}

// Text alignment should also work for flex blocks like the icon block.
.stk-block {
	justify-content: var(--stk-alignment-justify-content);
	text-align: var(--stk-alignment-text-align, start);
}
