/**
 * Core Block Styles for the editor
 */
@import "editor-breakpoints";
@import "editor-block-transitions";
@import "editor-compat";

.editor-styles-wrapper .stk-block {
	// Position relative (required for block links) will not work properly with
	// margin bottom resizer, make it static in the editor.
	position: static;
	// In the template editor, the blocks can go past their containers.
	box-sizing: border-box;
	[data-type^="stackable/"] {
		width: 100%;
		margin-inline: auto;
	}
}

// Blocks
.editor-styles-wrapper [data-block][data-type^="stackable/"],
[data-type^="stackable/"] > .wp-block {
	margin-top: 0;
	margin-bottom: 0;
	z-index: 1;
}
// The block contents may go out of bounds in tablet/mobile editor preview.
.stk-block-content {
	box-sizing: border-box;
}

// Add small margin between blocks so that placing your mouse between blocks
// will make the block appender appear.
.is-root-container > [data-block][data-type^="stackable/"]:not([data-type^="stackable/image"], [data-align="full"]) ~ [data-block][data-type^="stackable/"]:not([data-type^="stackable/image"], [data-align="full"]) {
	margin-top: 8px;
}
// Add small margin between blocks so that placing your mouse between blocks
// will make the block appender appear. This is for nested blocks.
// Nested images will not have gaps.
:where(:not(.stk-block-icon-label):not(.stk-block-blockquote):not(.stk-block-columns):not(.stk-block-expand):not(.stk-block-button-group) > .stk-inner-blocks > .block-editor-inner-blocks > .block-editor-block-list__layout > [data-block][data-type^="stackable/"]:not([data-type^="stackable/image"])) ~ [data-block][data-type^="stackable/"]:not([data-type="stackable/column"], [data-type^="stackable/image"]) {
	margin-top: 8px;
}

// Block widths,
.edit-widgets-block-editor .is-root-container > [data-type^="stackable/"] {
	margin-left: auto;
	margin-right: auto;
}
// Wide align, make sure the contents are centered.
.is-root-container > [data-type^="stackable/"][data-align="wide"] {
	margin-left: auto;
	margin-right: auto;
	> .wp-block[data-align] {
		width: 100%;
	}
}
// When full alignment, remove the sides.
.is-root-container > [data-type^="stackable/"][data-align="full"] {
	margin-left: -8px;
	margin-right: -8px;
	> .wp-block[data-align="full"] {
		margin-left: 0 !important;
		margin-right: 0 !important;
	}
}
// Make sure by default, all our inner blocks are center aligned.
.stk-inner-blocks.stk-content-align {
	margin-top: 0;
	margin-bottom: 0;
	&:not(.alignfull):not(.alignwide):not(.stk-button-group) {
		margin-left: auto;
		margin-right: auto;
	}
}

:where(.editor-styles-wrapper .stk-block-columns .wp-block,
.editor-styles-wrapper .stk-block-columns .stk-block-column) {
	max-width: inherit !important;
}

// Columns should occupy the entire available area.
[data-type^="stackable/"] {
	display: flex;
}
[data-type^="stackable/"] > div {
	width: 100%;
}

/**
 * Block widths for when blocks are placed inside columns, and Content Width is set to center or wide.
 */
:root {
	--stk-block-width-default-detected: 900px;
	--stk-block-width-wide-detected: calc(80vw - 280px); // Make way for the inspector
}

// For wide/full width blocks, but with their contents center aligned.
:where(:is(.stk-preview-device-desktop, .stk-preview-device-tablet) [data-type^="stackable/"]:not([data-align="center"]) > .wp-block[data-align] > .stk-block > .stk-inner-blocks:not(.alignwide):not(.alignfull)),
:where(:is(.stk-preview-device-desktop, .stk-preview-device-tablet) [data-type^="stackable/"]:not([data-align="center"]) [data-type^="stackable/"][data-align="center"]) {
	// --stk-block-default-width is a Stackable setting
	// --responsive--aligndefault-width is a Twenty Twenty One setting (possibly for all WP themes)
	// --stk-block-width-default-detected is from the fallback autodetected value.
	max-width: var(--stk-block-default-width, var(--responsive--aligndefault-width, var(--stk-block-width-default-detected, 900px))) !important;
}
// :is(.stk-preview-device-desktop, .stk-preview-device-tablet) .is-root-container > [data-type^="stackable/"][data-align="wide"], // Wide blocks show up as full-width (with blank sides), resize wide blocks correctly.
:where(:is(.stk-preview-device-desktop, .stk-preview-device-tablet) [data-type^="stackable/"] > .wp-block[data-align] > .stk-block > .stk-inner-blocks.alignwide),
:where(:is(.stk-preview-device-desktop, .stk-preview-device-tablet) [data-type^="stackable/"] [data-type^="stackable/"][data-align="wide"]) {
	// --stk-block-default-width is a Stackable setting
	// --responsive--aligndefault-width is a Twenty Twenty One setting (possibly for all WP themes)
	// --stk-block-width-default-detected is from the fallback autodetected value.
	max-width: var(--stk-block-wide-width, var(--responsive--alignwide-width, var(--stk-block-width-wide-detected, calc(80vw - 280px)))) !important; // Make way for the inspector
}
// If main block is centered and inner block is centered too, no max-width for the block to occupy entire centerd width.
:where(:is(.stk-preview-device-desktop, .stk-preview-device-tablet) [data-type^="stackable/"][data-align="center"] [data-type="stackable/column"] [data-type^="stackable/"][data-align="center"]) {
	max-width: none !important;
}
// Nested wide blocks will have their data-align wrappers limited by Gutenberg, make them occupy entire wide width of the parent.
:where(:is(.stk-preview-device-desktop, .stk-preview-device-tablet) [data-type^="stackable/"] [data-type^="stackable/"][data-align="wide"] > .wp-block[data-align="wide"]) {
	width: 100% !important;
}
// If the main container is wide and the Content Width is wide too, don't set a max width so it occupies the whole space.
:where(:is(.stk-preview-device-desktop, .stk-preview-device-tablet) [data-type^="stackable/"] > .wp-block[data-align="wide"] > .stk-block > .stk-inner-blocks.alignwide) {
	max-width: none !important;
}
// :is(.stk-preview-device-desktop, .stk-preview-device-tablet) .is-root-container > [data-type^="stackable/"][data-align="full"],
:where(:is(.stk-preview-device-desktop, .stk-preview-device-tablet) [data-type^="stackable/"] > .wp-block[data-align] > .stk-block > .stk-inner-blocks.alignfull) {
	max-width: none !important;
}

// Some themes add margins when alignwide and alignfull are used.
.editor-styles-wrapper {
	> .stk-inner-blocks.stk-content-align.wp-block[data-align] {
		margin: 0 auto !important;
	}
}

/**
 * Resizeable rows and columns
 */
.stk-row > .stk-block-content > .block-editor-inner-blocks > .block-editor-block-list__layout {
	display: flex;
	flex-direction: row;
	flex-wrap: wrap;
}
.stk-row > .stk-block-content > .block-editor-inner-blocks > .block-editor-block-list__layout > div:not(.block-list-appender) {
	box-sizing: border-box;
	margin-left: 0;
	margin-right: 0;
	width: 100%; // Some native blocks have auto widths so they won't follow left/center/right text alignment e.g. buttons
	max-width: inherit;
}
:where(.stk-row > .stk-block-content > .block-editor-inner-blocks > .block-editor-block-list__layout) > div {
	flex: 1 1 0;
}
// Mobile auto-collapses all columns.
@include mobile {
	:where(.stk-row > .stk-block-content > .block-editor-inner-blocks > .block-editor-block-list__layout) > div {
		flex: 1 1 100%;
	}
}
[data-type^="stackable/"] .stk-row,
.stk-column > .stk-inner-blocks:not(.stk--block-orientation-horizontal) > .block-editor-inner-blocks > .block-editor-block-list__layout {
	display: block;
}

// Inner block orientation
.stk--block-orientation-vertical > .block-editor-inner-blocks > .block-editor-block-list__layout {
	display: flex;
	flex-direction: column;
	> * { // Some native blocks can have margin left/right auto, they will center.
		width: 100%;
	}
}
.stk--block-orientation-horizontal > .block-editor-inner-blocks > .block-editor-block-list__layout {
	display: flex;
	flex-direction: row;
	> * {
		margin-top: 0;
		margin-bottom: 0;
	}
	> [data-block] {
		width: auto;
	}
}

// Columns
.stk-column-resizeable {
	height: 100% !important;
	width: 100% !important;
	max-width: none !important; // Don't force the max-width, we'll rely on the JS part.
	display: flex;
}

// Columns can be collapsed for tablet and mobile only.
@include desktop {
	.stk-row > .stk-block-content > .block-editor-inner-blocks > .block-editor-block-list__layout,
	.stk-row .block-editor-block-list__layout {
		flex-wrap: nowrap;
	}
}
// Mobile auto-collapses all columns.
@include mobile {
	.stk-row .block-editor-block-list__layout > div {
		flex: 1 1 100%;
		max-width: 100%;
	}
}

// Block backgrounds.
.stk-block-background.stk-column {
	overflow: auto; // Since our block background change the margin of it's contents, we need this to prevent the contents from clipping.
}

// Block inner blocks.
.stk-inner-blocks > * > .block-editor-block-list__layout {
	> [data-block]:first-child {
		margin-top: 0;
	}
	// Last of type since there's a .block-list-appender
	> [data-block]:nth-last-child(2) {
		margin-bottom: 0;
		&[data-type^="stackable/"] > .stk-block {
			margin-bottom: 0;
		}
	}
	> [data-block]:first-child:last-child {
		margin-bottom: 0;
		&[data-type^="stackable/"] > .stk-block {
			margin-bottom: 0;
		}
	}
}

// Block appender in latest Gutenberg adds margins on the appender.
.stk-block .block-list-appender {
	margin: 0px;
}

// Block float alignment.
[data-type^="stackable/"] {
	&[data-align="left"] {
		float: left;
	}
	&[data-align="right"] {
		float: right;
	}
	&[data-align="left"],
	&[data-align="right"] {
		width: auto;
		> .wp-block[data-align] {
			height: auto;
		}
		// Default width for inner blocks.
		.block-editor-block-list__layout:first-of-type > [data-type^="stackable/"] {
			max-width: 350px;
			width: auto;
		}
	}

}

// Headings
// Our headings have top margins if they're not the first heading, handle the different block structures.
.editor-styles-wrapper [data-type^="stackable/heading"]:first-child .stk-block-heading__text {
	margin-top: 0;
}

// Button alignment.
.stk-button-group {
	&:not(.stk-collapse-on-desktop) .block-editor-block-list__layout {
		justify-content: var(--stk-alignment-justify-content);
	}
	&:is(.stk--collapse-on-desktop) > .block-editor-inner-blocks > .block-editor-block-list__layout {
		> [data-block] {
			margin-inline-start: var(--stk-alignment-margin-left);
			margin-inline-end: var(--stk-alignment-margin-right);
		}
	}
}

@include tablet {
	.stk-button-group:is(.stk--collapse-on-tablet) > .block-editor-inner-blocks > .block-editor-block-list__layout {
		> [data-block] {
			margin-inline-start: var(--stk-alignment-margin-left);
			margin-inline-end: var(--stk-alignment-margin-right);
		}
	}
}

@include mobile {
	.stk-button-group:is(.stk--collapse-on-tablet) > .block-editor-inner-blocks > .block-editor-block-list__layout,
	.stk-button-group:is(.stk--collapse-on-mobile) > .block-editor-inner-blocks > .block-editor-block-list__layout {
		> [data-block] {
			margin-inline-start: var(--stk-alignment-margin-left);
			margin-inline-end: var(--stk-alignment-margin-right);
		}
	}
}

.stk-block .stk-button-group .block-editor-block-list__layout {
	align-items: center;
}

[data-block] .stk-inner-blocks {
	flex: inherit;
}

// We vertically center the buttons, but this doesn't work properly in the editor.
:is([data-type="stackable/button-group"], [data-type="stackable/load-more"]) .stk-button-group.stk-inner-blocks {
	align-items: normal;
	justify-content: var(--stk-alignment-justify-content);
}

